<?xml version="1.0" encoding="UTF-8"?>
<configuration debug="false">

    <!-- if you haven't configured logback over jmx you haven't lived -->
    <jmxConfigurator />

    <property name="log.dir" value="/var/log/tomcat6" />
    <property name="log.pattern" value="%d [cam] %-5p | FINGERPRINT=%X{FINGERPRINT} | [%thread] \\(%logger{4}:%line\\) | %m%n" />

    <!--=========
        Appenders
        =========-->
    <if condition='!isDefined("DEV_ENV") || p("DEV_ENV").equals("test")'>
        <then>
            <appender name="atb_log" class="ch.qos.logback.core.ConsoleAppender">
                <encoder>
                    <pattern>${log.pattern}</pattern>
                </encoder>
            </appender>
        </then>
        <else>
            <!-- Top level appender, this is where everything goes in our real environments -->
            <appender name="atb_log" class="ch.qos.logback.core.rolling.RollingFileAppender">
                <file>${log.dir}/cam.log</file>
                <encoder>
                  <pattern>${log.pattern}</pattern>
                </encoder>
                <rollingPolicy class="ch.qos.logback.core.rolling.FixedWindowRollingPolicy">
                    <fileNamePattern>${log.dir}/cam.log.%i</fileNamePattern>
                    <minIndex>1</minIndex>
                    <maxIndex>3</maxIndex>
                </rollingPolicy>
                <triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
                    <maxFileSize>25MB</maxFileSize>
                </triggeringPolicy>
            </appender>
        </else>
    </if>

    <!--=======
        Loggers
        =======-->

    <!-- 3rd party -->
    <logger name="org.springframework">
        <level value="info" />
    </logger>

    <!-- US! -->
    <logger name="com.atb.hypermedia.api">
        <level value="info" />
    </logger>


    <!-- everything info and above goes to cam_log -->
    <root>
        <level value="info" />
        <appender-ref ref="cam_log" />
    </root>

</configuration>
